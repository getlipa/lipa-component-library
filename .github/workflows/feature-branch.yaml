name: Check Conventional Commits
on:
  pull_request:
    types: [opened, synchronize]
jobs:

  check-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          fetch-depth: ${{ github.event.pull_request.commits }}
          fetch-tags: true
      - name: Conventional commit check
        uses: cocogitto/cocogitto-action@v3

  visual-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Storybook branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: new

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g backstopjs

      - name: Start Storybook server
        run: |
          npm run storybook:dev &
          echo $! > storybook.pid
          echo "Waiting for Storybook to be ready..."
          npx wait-on http://localhost:6006/iframe.html
          echo "Storybook is ready."

      - name: Generate Reference Screenshots
        run: npm run backstop:reference

      - name: Stop Storybook server
        run: kill $(cat storybook.pid)

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backstop-reference
          path: backstop_data/bitmaps_reference

      - name: Checkout Pull Request
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Download artifact on new branch
        uses: actions/download-artifact@v4
        with:
          name: backstop-reference
          path: backstop_data/bitmaps_reference

      - name: Install dependencies
        run: |
          npm ci
          npm install -g backstopjs

      - name: Start Storybook server
        run: |
          ls
          npm run storybook:dev &
          echo "Waiting for Storybook to be ready..."
          npx wait-on http://localhost:6006/iframe.html
          echo "Storybook is ready."

      - name: Run Visual Tests
        run: npm run backstop:test

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backstop-report
          path: backstop_data

  upload-test-report:
    needs: visual-tests
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Download artifact on new branch
        uses: actions/download-artifact@v4
        with:
          name: backstop-report
          path: backstop_data

      - name: Prepare report for GitHub Pages
        run: |
          mkdir -p report-build
          cp -r backstop_data report-build/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report-build
          publish_branch: gh-pages
          destination_dir: reports/${{ github.ref_name }}

      - name: Comment report link to PR
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = '${{ github.ref_name }}';
            const reportUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${branchName}/`;
  
            const jobStatus = '${{ needs.visual-tests.result }}';
            let commentMessage = '';
  
            if (jobStatus === 'success') {
              commentMessage = `üß™  The visual tests succeeded. See visual test report for \`${branchName}\`: [View Report](${reportUrl}/backstop_data/html_report/)`;
            } else if (jobStatus === 'failure') {
              commentMessage = `‚ùå  The visual tests failed. ONLY MERGE THE PR IF THE UPDATED COMPONENTS ARE AS EXPECTED. See visual test report for \`${branchName}\`: [View Report](${reportUrl}/backstop_data/html_report/)`;
            }
  
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentMessage
            });
